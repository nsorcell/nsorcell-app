import { Text } from "components/typography"
import { useAppSelector } from "hooks/store"
import type { NextPage } from "next"
import { useTranslation } from "next-i18next"
import Head from "next/head"
import "twin.macro"

import { getServerSideTranslations } from "utils/translations"

export const getStaticProps = async ({ locale }: { locale: Locale }) => {
  return {
    props: {
      ...(await getServerSideTranslations(locale)),
    },
  }
}

const Home: NextPage = () => {
  const { t } = useTranslation("common")

  const { history } = useAppSelector((state) => state.lottery)
  return (
    <>
      <Head>
        <title>{t("results")}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div tw="flex flex-col items-center md:items-start justify-between">
        <Text variant="h1" tw="text-white mb-8">
          History
        </Text>
        <div>
          {Object.entries(history)
            .reverse()
            .map(([iteration, { winningNumbers, winners }]) => (
              <div tw="mb-4">
                <div tw="mb-2">
                  <Text variant="h5" tw="text-white">
                    Round: {iteration}
                  </Text>
                  <div tw="w-full h-0.5 bg-gray-700 mt-2" />
                </div>
                <div>
                  <Text variant="subtitle1" tw="text-white">
                    Winning Numbers: {winningNumbers.join(", ")}
                  </Text>
                </div>
                {winners.length ? (
                  <Text variant="body2" tw="text-white">
                    Winner(s): {winners.join("\n")}
                  </Text>
                ) : (
                  <div>
                    <Text variant="body2" tw="text-white">
                      No Winners
                    </Text>
                  </div>
                )}
              </div>
            ))}
        </div>
      </div>
    </>
  )
}

export default Home
